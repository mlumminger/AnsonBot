*/
activity = discord.Game(name="Playing with E-Girls q(≧▽≦q) !help")
intents = discord.Intents.all()

client = discord.Client()
client = commands.Bot(command_prefix = '!', intents = intents, activity=activity, status=discord.Status.online, help_command=None)
client.remove_command("help")

os.chdir("C:\\Users\\vinhp\\OneDrive\\Desktop\\Coding Projects\\League Bot")
load_dotenv("C:\\Users\\vinhp\\OneDrive\\Desktop\\Coding Projects\\League Bot\\token.env")
TOKEN = os.getenv('DISCORD_TOKEN')
GUILD = os.getenv('GUILD_TOKEN')
url = 'https://forms.gle/fSAvWdFdp4Ncg8rS7'

def cooldown(rate, per_sec=0, per_min=0, per_hour=0, type=commands.BucketType.default):
    return commands.cooldown(rate, per_sec + 60 * per_min + 3600 * per_hour, type)

def get_pst_time():
    date_format="%A"
    date = datetime.now(tz=utc)
    date = date.astimezone(timezone('US/Pacific'))
    pstDateTime=date.strftime(date_format)
    print(pstDateTime)
    return pstDateTime

def randomNum():
    return random.randint(100000, 999999)

def gamble():
    return random.randrange(1,11)

@client.event
async def on_ready():

    print('Ready')

@tasks.loop(hours=5)
async def sellouttime():
    channel = client.get_channel(846222971668004877)
    await channel.send('Wanna play your favorite game League of Legends Competitively? \n' + url)

@client.command(name="help")
async def help(ctx, args=None):
    help_embed = discord.Embed(title="Anson's Help Menu")

    # If there are no arguments, just list the commands:
    if not args:
        help_embed.add_field(
            name="List of supported commands: \nPrefix: !",
            value="\n".join([str(i+1)+". "+x.name for i,x in enumerate(client.commands)]),
            inline=False
        )

    # If someone is just trolling:
    else:
        help_embed.add_field(
            name="Nope.",
            value="Don't think I got that command, nya~!"
        )

    await ctx.send(embed=help_embed)

@client.command(name='esports')
async def _day(ctx):

    quotes = [
    "Hey, do you love league of legends, then you'll love league of legends live \n  ",
    "So true bestie! Come join: \n ",
    "E-Sports is for everyone! Come join: \n ",
    "League of Legends, Smash Bros, Rocket League, Madden, and Splatoon E-Sports: \n ",
    "You'll be Challenger within a month!: \n  ",
    "@gyaraados#6969 will give you a sucky: \n ",
    "nya~ \n ",
    "You can join bestie :heart: \n "
    ]

    response = random.choice(quotes) + url
    await ctx.send(response)

@client.command(name='day')
async def _day(ctx):
    day = get_pst_time()
    if day == "Monday":
        await ctx.send("IT IS MINECRAFT MONDAY")
    elif day == "Tueday":
        await ctx.send("TERRARIA TUESDAY")
    elif day == "Wednesday":
        await ctx.send("Whatever Wednesday :neutral_face:")
    elif day == "Thursday":
        await ctx.send("The fuck Thursday")
    elif day == "Friday":
        await ctx.send("FORTNITE FRIDAY!!!!!!!!!!!!!!!!!!!!!!!!!!!")
    elif day == "Saturday":
        await ctx.send("Shooter Saturday :gun: :gun: ")
    elif day == "Sunday":
        await ctx.send("ඞ ITS SUSSY SUNDAY!! ඞ")

@client.command(name="8ball", pass_context=True)
async def eightball(ctx,*, message):
    answers = ["It is certain",
    "It is decidedly so",
    "Without a doubt",
    "Yes, definitely",
    "You may rely on it",
    "As I see it, yes",
    "Most likely",
    'Outlook good',
    "Yes",
    "Signs point to yes",
    "Try again",
    "Ask again later",
    "Better not tell you now",
    "Cannot predict now",
    "Concentrate and ask again",
    "Don't count on it",
    "My reply is no",
    "My sources say no",
    "Outlook not so good",
    "Very doubtful"
    ]

    choice = random.choice(answers)
    await ctx.send("Q: " + message + "\nA: " + choice)

@client.command(aliases = ["femboy"], name="femboyanson")
async def anson(ctx):
    images = ['https://cdn.discordapp.com/attachments/525177389396000788/858982174979915814/image0.jpg',
              'https://cdn.discordapp.com/attachments/525177389396000788/858982175281250314/image1.jpg',
              'https://cdn.discordapp.com/attachments/525177389396000788/858982175604998154/image2.jpg',
              'https://cdn.discordapp.com/attachments/525177389396000788/858982176255377408/image3.png',
              'https://cdn.discordapp.com/attachments/525177389396000788/858982176720814100/image4.jpg',
              'https://cdn.discordapp.com/attachments/525177389396000788/858982177027260426/image5.jpg',
              'https://cdn.discordapp.com/attachments/525177389396000788/858982177278001152/image6.jpg'
              ]
    await ctx.send(random.choice(images))

@client.command(name="gamble", pass_context=True)
async def _gamble(ctx, answer):
    correct_answer = str(gamble())
    if correct_answer != answer:
        await ctx.send("Sorry the correct number was: " + correct_answer)
    elif answer == correct_answer:
        await ctx.send("Correct!")

@client.event
async def on_message(message):
    if message.author == client.user:
        return
    # id_chau = 533468943851978773
    nick = message.author.nick
    word = message.content.lower()

    # Identification
    print("ID: " + str(message.author.id) + "\nName: " + str(message.author.name) + "\nNickname: " + str(message.author.nick))

    # if message.author.id == id_chau:
    #     await message.channel.send("hey bestie!!!! i know u wanna join the esports team :heart: :heart_eyes: :heart::sparkles::heart::sparkles::smiling_face_with_3_hearts: :sparkles::heart::sparkles::sparkles::heart_eyes: :smiling_face_with_3_hearts: :smiling_face_with_3_hearts: \n " + url)

    if word.find("lets have a child birth-off") != -1 or word.find("lets have a child birthoff") != -1:
        if nick != None:
            await message.channel.send(f"{nick}" + ": I have been ordered to issue an apology by the court of law, in no instance should child birth be linked to illegal gambling, and if there's one thing that makes childbirth a drag... It's illegal gambling. Please forgive me and don't set up a child birth-off of your own.")
        else:
            name = message.author.name
            await message.channel.send(f"{name}" + ": I have been ordered to issue an apology by the court of law, in no instance should child birth be linked to illegal gambling, and if there's one thing that makes childbirth a drag... It's illegal gambling. Please forgive me and don't set up a child birth-off of your own.")
    elif word.find("rhodesian") != -1 or word.find("rhodesia") != -1:
        await message.channel.send("No.")
    elif word.find("what are you doing?") != -1:
        await message.channel.send(f"Step {nick} ")
    elif word.find("cat") != -1 or word.find("katarina") != -1 or word.find("rengar") != -1 or word.find("yummi") != -1 or word.find("nidalee") != -1 or word.find("nya") != -1:
        await message.channel.send("nya~")
    elif word.find("sauce") != -1:
        await message.channel.send(randomNum())
    elif word.find("angey") != -1 or word.find("angy") != -1:
        await message.channel.send(">:c")
    await client.process_commands(message)

@client.command(aliases = ["bal"], name='balance')
async def balance(ctx):
    await open_account(ctx.author)
    user = ctx.author
    users = await get_bank_data()

    wallet_amt = users[str(user.id)]["wallet"]
    bank_amt = users[str(user.id)]["bank"]

    em = discord.Embed(title = f"{ctx.author.name}'s balance", color = discord.Color.red())
    em.add_field(name = "Wallet balance", value = wallet_amt)
    em.add_field(name = "Bank balance", value = bank_amt)
    await ctx.send(embed = em)

@client.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandOnCooldown):
        msg = '**Still on cooldown**, please try again in {:.2f}s'.format(error.retry_after)
        await ctx.send(msg)

@client.command(name="beg")
@cooldown(2, per_sec=30, type=commands.BucketType.user)
async def beg(ctx):
    await open_account(ctx.author)
    users = await get_bank_data()
    user = ctx.message.author
    bal = await update_bank(ctx.author)
    cum = [True, False]
    good_quotes = [
        "You're so poor lol Anson gave you",
        "You poor bastard. Anson felt pity uwu...So he gave you",
        "Since you're my kitten I'll give you",
        "I'll give you money. But check out this application " + url + " ;) You got",
        "yay u win! now u can be my sugar daddy :) You won"
    ]
    bad_quotes = [
        "LOL You made Anson angey... he took your money. You lost",
        "Anson gave you the Nino drink. You black out and lost",
        "Anson leaked his nudes and you died from peeking at them. You lost",
        "aww im sho sowwy u lost :pleading_face: You lost",
        "its ok bestie youll win next time :smiling_face_with_3_hearts: You lost",
        "im sowwy u cant get any money but u can get something else ;)"
    ]


    earnings = random.randrange(101)
    if earnings == 0:
        await ctx.send(f"I cant give u money but i can give u a kiss mwah :kissing_closed_eyes: You got {earnings} coins!")
        users[str(user.id)]['wallet'] += earnings
    elif random.choice(cum) == True:
        await ctx.send(f"{random.choice(good_quotes)} {earnings} coins!")
        users[str(user.id)]['wallet'] += earnings
    else:
        await ctx.send(f"{random.choice(bad_quotes)} {earnings} coins!")
        if earnings > bal[0]:
            users[str(user.id)]['bank'] -= earnings
        else:
            users[str(user.id)]['wallet'] -= earnings

    with open("mainbank.json", "w") as f:
        json.dump(users, f)

@client.command(name = "withdraw")
async def _withdraw(ctx, amount = None):
    await open_account(ctx.author)

    if amount == None:
        await ctx.send("UWU you didn't enter an amount")
        return

    bal = await update_bank(ctx.author)
    amount = int(amount)
    if amount > bal[1]:
        await ctx.send("UWU you don't have any money")
        return
    if amount < 0:
        await ctx.send("UWU You have no money!")
        return

    await update_bank(ctx.author, amount)
    await update_bank(ctx.author, -1*amount, "bank")

    await ctx.send(f"You withdrew {amount} coins :heart: ")

@client.command(name = "deposit")
async def _deposit(ctx, amount = None):
    await open_account(ctx.author)

    if amount == None:
        await ctx.send("UWU you didn't enter an amount")
        return

    bal = await update_bank(ctx.author)
    amount = int(amount)
    if amount > bal[0]:
        await ctx.send("UWU you don't have any money")
        return
    if amount < 0:
        await ctx.send("UWU You have no money!")
        return

    await update_bank(ctx.author, -1*amount)
    await update_bank(ctx.author, amount, "bank")

    await ctx.send(f"You deposited {amount} coins :heart: ")

@client.command(name="send")
async def _send(ctx, member:discord.Member, amount = None):
    await open_account(ctx.author)
    await open_account(member)

    if amount == None:
        await ctx.send("UWU you didn't enter an amount")
        return

    bal = await update_bank(ctx.author)
    amount = int(amount)

    if amount > bal[1]:
        await ctx.send("UWU you don't have any money")
        return
    if amount < 0:
        await ctx.send("UWU You have no money!")
        return

    await update_bank(ctx.author, -1*amount, "bank")
    await update_bank(member, amount, "bank")

    await ctx.send(f"You gave {amount} coins :heart: ")

@client.command(aliases = ["lb"])
async def leaderboard(ctx, x=5):
    users = await get_bank_data()
    leader_board = {}
    total = []


    for user in users:
        name = int(user)
        total_amount = users[user]["wallet"] + users[user]["bank"]
        leader_board[total_amount] = name
        total.append(total_amount)


    total = sorted(total, reverse=True)
    em = discord.Embed(title = f"Top {x} Sugar Daddies",description="Calculated Based On Wallet and Bank Balance", color = 0x00A6FF)
    index = 1
    for amt in total:
        id_ = leader_board[amt]
        member = client.get_user(id_)
        name = member.name
        em.add_field(name = f"{index}. {name}" , value = f"{amt}", inline=False)
        if index == x:
            break
        index = index + 1

    await ctx.send(embed = em)

@client.command()
@cooldown(1, per_min=30, type=commands.BucketType.user)
async def rob(ctx, member:discord.Member):
    await open_account(ctx.author)
    await open_account(member)

    # Check balance of Person
    bal = await update_bank(member)

    if bal[0] < 100:
        await ctx.send("This person is super poor! It's not worth it")
        return

    earnings = random.randrange(0, bal[0])
    await update_bank(ctx.author, earnings)
    await update_bank(member,-1*earnings)

    await ctx.send(f"You stole {earnings} coins :heart: They must be angey! ")

@client.command()
@cooldown(2, per_sec= 10, type=commands.BucketType.user)
async def slots(ctx, amount = None, pass_content = True):
    await open_account(ctx.author)

    if amount == None:
        await ctx.send("UWU you didn't enter an amount")
        return

    bal = await update_bank(ctx.author)
    amount = int(amount)
    if ctx.message.content == 'all':
        slots(ctx.author, bal[0])
    if amount > bal[0]:
        await ctx.send("UWU you don't have any money")
        return
    if amount < 0:
        await ctx.send("UWU You have no money!")
        return

    final = []
    for i in range(3):
        a = random.choice([":japanese_goblin:",":poop:",":heart:"])
        final.append(a)

    await ctx.send(str(final))

    if final[0] == final[1] and final[1] == final[2] and final[0] == final[2]:
        await update_bank(ctx.author, 5*amount)
        await ctx.send("You Won!")
    else:
        await update_bank(ctx.author, -1*amount)
        await ctx.send("You Lost!")

async def open_account(user):

    users = await get_bank_data()

    if str(user.id) in users:
        return False
    else:
        users[str(user.id)] = {}
        users[str(user.id)]["wallet"] = 0
        users[str(user.id)]["bank"] = 0

    with open("mainbank.json", "w") as f:
        json.dump(users, f)
    return True

async def get_bank_data():
    with open("mainbank.json", "r") as f:
        users = json.load(f)

    return users

async def update_bank(user, change = 0, mode = "wallet"):
    users = await get_bank_data()

    users[str(user.id)][mode] += change

    with open("mainbank.json", "w") as f:
        json.dump(users, f)

    balance = [users[str(user.id)]["wallet"], users[str(user.id)]["bank"]]
    return balance

client.run(TOKEN)

*/